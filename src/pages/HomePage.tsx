import { BarChart, Bar, XAxis, CartesianGrid, ResponsiveContainer, Tooltip, Legend } from "recharts";
import {
  Card,
  CardContent,
  CardHeader,
  CardTitle,
  CardDescription,
} from "@/components/ui/card";
import { TrendingUp, TrendingDown, CircleDollarSign, Info, Goal } from "lucide-react";
import { Progress } from "@/components/ui/progress";
import { Button } from "@/components/ui/button";
import { cn } from "@/lib/utils";
import { useMemo } from "react";

// –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –±—é–¥–∂–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Äî –°–ò–ù–•–†–û–ù–ò–ó–ò–†–û–í–ê–ù–´ —Å —Ü–∏—Ñ—Ä–∞–º–∏ –Ω–∞ BudgetPage!
const budgetData = [
  { month: "–ú–∞–π", income: 115000, expenses: 94000 },
  { month: "–ò—é–Ω—å", income: 120000, expenses: 102000 },
  { month: "–ò—é–ª—å", income: 125000, expenses: 110850 },
];

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è (–Ω–∏–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞–∑–≤–∞–Ω–∏—è –∏ —Ñ–æ—Ä–º—É–ª—ã –¥–ª—è –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏)
function getDelta(a: number, b: number) {
  const diff = a - b;
  const percent = b ? ((diff) / b) * 100 : 0;
  return {
    up: diff > 0,
    percent: Math.abs(percent).toFixed(1),
  };
}

const last = budgetData[budgetData.length - 1];
const prev = budgetData[budgetData.length - 2];

// –í—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω—ã: –¥–æ—Ö–æ–¥—ã, —Ä–∞—Å—Ö–æ–¥—ã, —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è
const incomeDelta = getDelta(last.income, prev.income);
const expensesDelta = getDelta(last.expenses, prev.expenses);

const dashboardMetrics = {
  income: last.income,
  expenses: last.expenses,
  savings: last.income - last.expenses,
  savingsPercent: Math.max(Math.round(((last.income - last.expenses) / last.income) * 100), 0),
};

const monthlyGoal = 25000;
const progressValue = Math.min(100, Math.round((dashboardMetrics.savings / monthlyGoal) * 100));

const financialAdvice = [
  "–û—Ç–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ –Ω–µ –º–µ–Ω–µ–µ 20% –¥–æ—Ö–æ–¥–∞ –Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–æ–¥—É—à–∫—É.",
  "–ö–∞—Ç–µ–≥–æ—Ä–∏—è ¬´–ï–¥–∞¬ª ‚Äî –∑–¥–µ—Å—å —á–∞—Å—Ç–æ –º–æ–∂–Ω–æ —ç–∫–æ–Ω–æ–º–∏—Ç—å –±–µ–∑ –ø–æ—Ç–µ—Ä—å.",
  "–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ø–æ–¥–ø–∏—Å–∫–∏: –º–∞–ª–µ–Ω—å–∫–∏–µ —Å—É–º–º—ã –Ω–µ–∑–∞–º–µ—Ç–Ω–æ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –±–æ–ª—å—à–∏–º–∏!",
];

const HomePage = () => {
  const tip = useMemo(() => financialAdvice[Math.floor(Math.random() * financialAdvice.length)], []);

  return (
    <div className="p-2 sm:p-6 flex flex-col gap-7 max-w-2xl mx-auto">
      {/* –°—É–ø–µ—Ä –∑–∞–º–µ—Ç–Ω—ã–π –±–∞–ª–∞–Ω—Å/—à–∞–ø–∫–∞ */}
      <div className="w-full bg-gradient-to-br from-cyber-purple via-sky-200/80 to-emerald-100 shadow-xl rounded-3xl p-6 relative overflow-hidden flex flex-col gap-2 animate-fade-in">
        <div className="flex items-center gap-3 mb-2">
          <CircleDollarSign size={32} className="text-cyber-purple drop-shadow" />
          <div className="flex-1">
            <span className="uppercase tracking-wide text-xs text-cyber-purple/70">–û–±—â–∏–π –±–∞–ª–∞–Ω—Å</span>
            <div className="text-3xl font-bold text-cyber-purple drop-shadow-sm">{dashboardMetrics.savings.toLocaleString()}‚ÇΩ</div>
          </div>
        </div>
        <div className="flex gap-3 text-xs text-muted-foreground">
          <div>
            –î–æ—Ö–æ–¥: <span className="text-green-500 font-semibold">{dashboardMetrics.income.toLocaleString()}‚ÇΩ</span>
          </div>
          <div>
            –†–∞—Å—Ö–æ–¥: <span className="text-red-500 font-semibold">{dashboardMetrics.expenses.toLocaleString()}‚ÇΩ</span>
          </div>
        </div>
        <Progress value={progressValue} className="mt-4 h-2 bg-emerald-100" />
        <div className="flex items-center mt-2 gap-3 text-sm">
          <Goal className="text-emerald-400" size={18} />
          –ü—Ä–æ–≥—Ä–µ—Å—Å –∫ —Ü–µ–ª–∏: <span className="font-semibold">{progressValue}%</span>
          <span className="ml-auto text-xs text-cyber-purple/70">–¶–µ–ª—å: {monthlyGoal.toLocaleString()}‚ÇΩ</span>
        </div>
        <div className="absolute right-3 top-2 opacity-30 text-cyber-purple text-8xl pointer-events-none select-none">üè¶</div>
      </div>

      {/* –°–æ–≤–µ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞ */}
      <Card className="mx-auto w-full max-w-lg bg-cyber-purple/10 border-cyber-purple/20 shadow-md">
        <CardContent className="flex items-center gap-2 py-3">
          <Info className="text-cyber-purple" size={22} />
          <span className="font-medium">{tip}</span>
        </CardContent>
      </Card>

      {/* –í–∏—Ç—Ä–∏–Ω–∞ –º–µ—Ç—Ä–∏–∫ —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–∞—Ä—Ç–∞–º–∏ */}
      <div className="grid grid-cols-1 sm:grid-cols-3 gap-3">
        <Card className="bg-gradient-to-br from-green-100 via-green-50 to-white animate-scale-in border-none shadow-md">
          <CardHeader>
            <CardTitle className="flex items-center gap-2 text-lg">
              <TrendingUp className="text-green-500" size={22} />
              –î–æ—Ö–æ–¥—ã
            </CardTitle>
            <CardDescription className="flex items-center gap-2">
              –ò—é–ª—å
              <span className={cn("ml-2 flex items-center", incomeDelta.up ? "text-green-600" : "text-red-500")}>
                {incomeDelta.up ? <TrendingUp size={16} /> : <TrendingDown size={16} />}
                {incomeDelta.percent}%
              </span>
            </CardDescription>
          </CardHeader>
          <CardContent>
            <span className="font-bold text-2xl text-green-600">
              {dashboardMetrics.income.toLocaleString()}‚ÇΩ
            </span>
          </CardContent>
        </Card>
        <Card className="bg-gradient-to-br from-red-100 via-red-50 to-white animate-scale-in border-none shadow-md">
          <CardHeader>
            <CardTitle className="flex items-center gap-2 text-lg">
              <TrendingDown className="text-red-500" size={22} />
              –†–∞—Å—Ö–æ–¥—ã
            </CardTitle>
            <CardDescription className="flex items-center gap-2">
              –ò—é–ª—å
              <span className={cn("ml-2 flex items-center", expensesDelta.up ? "text-red-600" : "text-green-600")}>
                {expensesDelta.up ? <TrendingUp size={16} /> : <TrendingDown size={16} />}
                {expensesDelta.percent}%
              </span>
            </CardDescription>
          </CardHeader>
          <CardContent>
            <span className="font-bold text-2xl text-red-600">
              {dashboardMetrics.expenses.toLocaleString()}‚ÇΩ
            </span>
          </CardContent>
        </Card>
        <Card className="bg-gradient-to-br from-sky-100 via-sky-50 to-white animate-scale-in border-none shadow-md">
          <CardHeader>
            <CardTitle className="flex items-center gap-2 text-lg">
              <CircleDollarSign className="text-sky-500" size={22} />
              –°–±–µ—Ä–µ–∂–µ–Ω–∏—è
            </CardTitle>
            <CardDescription>
              {dashboardMetrics.savings.toLocaleString()}‚ÇΩ ({dashboardMetrics.savingsPercent}% –æ—Ç –¥–æ—Ö–æ–¥–∞)
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="flex items-center gap-2 mb-1">
              <Goal className="text-emerald-400" size={18} />
              –ü—Ä–æ–≥—Ä–µ—Å—Å: {progressValue}%
            </div>
            <Progress value={progressValue} className="h-2 bg-emerald-100" />
            <div className="text-xs text-muted-foreground mt-1">
              –¶–µ–ª—å: {monthlyGoal.toLocaleString()}‚ÇΩ
            </div>
          </CardContent>
        </Card>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è (—ç–∫—à–æ–Ω –±–∞—Ä) */}
      <div className="flex gap-4 justify-center">
        <Button className="animate-fade-in shadow hover-scale rounded-lg bg-gradient-to-r from-cyber-purple to-neon-pink text-white px-5 py-2">
          + –î–æ—Ö–æ–¥
        </Button>
        <Button className="animate-fade-in shadow hover-scale rounded-lg bg-gradient-to-r from-red-400 to-sunset-orange text-white px-5 py-2">
          + –†–∞—Å—Ö–æ–¥
        </Button>
      </div>

      {/* –ì—Ä–∞—Ñ–∏–∫ –±—é–¥–∂–µ—Ç–∞ ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å BudgetPage */}
      <Card className="border-cyber-purple/20">
        <CardHeader>
          <CardTitle>–ì—Ä–∞—Ñ–∏–∫ –±—é–¥–∂–µ—Ç–∞</CardTitle>
          <CardDescription>–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="h-[240px] w-full">
            <ResponsiveContainer width="100%" height="100%">
              <BarChart data={budgetData} margin={{ top: 20, right: 30, left: 0, bottom: 0 }}>
                <CartesianGrid vertical={false} stroke="#eee" />
                <XAxis dataKey="month" tickLine={false} axisLine={false} stroke="#999" fontSize={14} />
                <Tooltip
                  cursor={{ fill: "#e0e7ef33" }}
                  formatter={(val: number) => `${val?.toLocaleString()}‚ÇΩ`}
                />
                <Legend
                  wrapperStyle={{ paddingTop: 5, fontSize: 13 }}
                  iconType="circle"
                  payload={[
                    { value: "–î–æ—Ö–æ–¥—ã", type: "circle", color: "#34d399" },
                    { value: "–†–∞—Å—Ö–æ–¥—ã", type: "circle", color: "#ef4444" }
                  ]}
                />
                <Bar dataKey="expenses" name="–†–∞—Å—Ö–æ–¥—ã" fill="#ef4444" radius={7} barSize={28} />
                <Bar dataKey="income" name="–î–æ—Ö–æ–¥—ã" fill="#34d399" radius={7} barSize={28} />
              </BarChart>
            </ResponsiveContainer>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default HomePage;
